#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int data;
    int priority;
    struct Node *next;
}node;
node *head = NULL;

struct Node *CreateNode() 
{
    node *new = (node*) malloc(sizeof(node));
    return new; 
}
void insert_update(int value, int key) 
{
    node *temp = head;
    node *newNode = CreateNode();
    newNode->data = value;
    newNode->priority = key;
    if(temp == NULL || temp->priority > key) {
        newNode->next = head;
        head = newNode;
    } else {
        while(temp->next != NULL && temp->next->priority < key) {
            temp =temp->next;
        }
        newNode->next = temp->next;
        temp->next = newNode;
    } 
}
int Search(int key)
{
    node* temp=head;
    while(temp!=NULL)
    {
        if(temp->priority==key)
        return 1;
        else
        return -1;
    }
}

int delete(int key) 
{
    node* temp=head;
    while(temp!=NULL)
    {
        if(temp->priority==key)
        {
            free(temp);
            return 1;
        }
        else
        return -1;
    }
}
int length()
{
    node*temp=head;
    int count=0;
    while(temp!=NULL)
    {
        count++;
        temp=temp->next;
    }
    return count;
}
void main() {
    int ch, d, p, x;
    while(1) {
        printf("\n\n\t*MENU*\n");
        printf("1. Insertion\n");
        printf("2. Search\n");
        printf("3. Deletion\n");
        printf("4. Length\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d",&ch);

        switch(ch) {
            case 1: 
                printf("\nEnter value to be inserted: ");
                scanf("%d",&d);
                printf("Enter key: ");
                scanf("%d",&p);
                insert_update(d, p);
                break;
            case 2:
                printf("\nEnter the key you want to search: ");
                int k;
                scanf("%d",&k);
                x = Search(k);
                printf("%d",x);
                break;
            case 3: 
                printf("\nEnter the key you want to delete: ");
                int k1;
                scanf("%d",&k1);
                x = delete(k1);
                printf("%d",x);
                break;
            case 4:
                x=length();
                printf("The total number of elements in the list are: %d",x);
                break;
            case 5:
                exit(0);
                break;
            default:
                printf("\n**Enter a valid choice**\n");
        }
    }   
}